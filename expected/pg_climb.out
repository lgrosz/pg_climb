CREATE EXTENSION pg_climb;
 
SELECT EXISTS (
    SELECT 1 FROM pg_type WHERE typname = 'grade'
);
 exists 
--------
 t
(1 row)

SELECT grade_out('V5'::grade);
 grade_out 
-----------
 V5
(1 row)

-- invalid grade because only one type can be specified
CREATE TABLE grades_1(grade grade(verm,font));
ERROR:  typmod array must contain exactly one value
LINE 1: CREATE TABLE grades_1(grade grade(verm,font));
                                    ^
-- invalid because "nope" isn't a grade type
CREATE TABLE grades_2(grade grade(nope));
ERROR:  parameter value not a valid typmod
LINE 1: CREATE TABLE grades_2(grade grade(nope));
                                    ^
-- any type of grade can be inserted into a column with no typmod
CREATE TABLE grades_3(grade grade);
INSERT INTO grades_3 VALUES ('V5'::grade), ('F7A+'::grade);
-- only values of the given typmod can be inserted when typmod is specified
CREATE TABLE grades_4(grade grade(verm));
INSERT INTO grades_4 VALUES ('V5'::grade);
INSERT INTO grades_4 VALUES ('F7A+'::grade);
ERROR:  typmod mismatched
-- b-tree operators allow for constraints such as UNIQUE to be used
CREATE TABLE grades_unique(grade grade, UNIQUE(grade));
INSERT INTO grades_unique VALUES
    ('V2'), ('V1'), ('F7A+'), ('F5'), ('5.13c'), ('5.10a');
-- b-tree operators also allow ordering queries
SELECT grade from grades_unique ORDER BY grade;
 grade 
-------
 V1
 V2
 F5
 F7A+
 5.10a
 5.13c
(6 rows)

-- the types can be gotten by calling the GradeType function
SELECT grade, GradeType(grade) FROM grades_unique;
 grade | gradetype 
-------+-----------
 V2    | verm
 V1    | verm
 F7A+  | font
 F5    | font
 5.13c | yds
 5.10a | yds
(6 rows)

